<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Annotation 사용하기 위해..? -->
	<context:component-scan base-package="com.ja.aoptest" />
	

	<!-- XML 방식 -->
	<!-- XMl 설정 방식 2가지 / 생성자 방식, setter 방식 -->
	<!-- setter 설정해줘야함 -->
	<!-- 
	<beans:bean class="com.ja.aoptest.BoardServiceImpl">
		<beans:property name="boardDao" ref="dao"></beans:property>
	</beans:bean>
	
	<beans:bean id="dao" class="com.ja.aoptest.BoardDao">
	</beans:bean>
	 -->
	 
	 <!-- container 안에서 .. 적용..? -->
	 <beans:bean id="log" class="com.ja.aoptest.LogAdvice">
	 </beans:bean>
	 
	 <!-- 어떤 메소드가 실행될때 이걸을 실행할 것이냐 -->
	 <!-- 모든 Impl의 들어간 클래스 메소드에서 printLog를 사용하겠다 -->
	 <aop:config>
	 <!-- pointcut 어떤 메소드가 실행될 때 -->
	 <!-- execution(void or *만 사용할 수 있다 / com.ja.aoptest패키지.. / *Impl클래스명./*(..)메소드) -->
	 <!-- 전체다 사용할 거 아니면 get*(..) get이 들어가 메소드만 사용하겠다라는 의미 이런식으로도 사용가능하다 / *만 사용하면 전체 사용 -->
	 
	 	<aop:pointcut expression="execution(* com.ja.aoptest..*Impl.*(..))" id="allPointcut"/>
	 	<!-- aspect: 결합하겠다 
	 	<beans:bean id="log" class="com.ja.aoptest.LogAdvice"> 이 클래스와 결합하겠다 -->
	 	<!-- aop:after : 로그가 비즈니스 로직이 실행된 다음에 실행된다 -->
	 	<!--  
	 	<aop:aspect ref="log">

	 		<aop:before method="printLog" pointcut-ref="allPointcut"/>
	 		<aop:after method="printAfterLog" pointcut-ref="allPointcut"/>
	 	
	 		<aop:around method="aroundLog" pointcut-ref="allPointcut"/>
	 	</aop:aspect>
	 </aop:config>
	 -->  
	 
</beans:beans>
